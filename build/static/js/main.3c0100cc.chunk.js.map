{"version":3,"sources":["services/firebase.ts","contexts/AuthContext.tsx","components/pages/SignUp.tsx","components/pages/Login.tsx","components/ui/QuantityEdit.tsx","components/ui/ItemCard.tsx","components/ui/CreateNewItem.tsx","components/ui/SelectList.tsx","components/ui/CreateNewList.tsx","components/pages/ListDashboard.tsx","components/pages/Profile.tsx","components/PrivateRoute.tsx","components/sections/Nav.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["auth","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseRef","database","ref","db","listsRef","child","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","value","loggedInUser","signUpFn","email","password","createUserWithEmailAndPassword","then","cred","uid","set","id","signUp","loginFn","signInWithEmailAndPassword","login","logoutFn","signOut","Provider","SignUp","useForm","register","handleSubmit","errors","errorText","setErrorText","isLoading","setIsLoading","fbAuth","onSubmit","data","a","console","log","p","status","mr","position","right","top","isRequired","colorScheme","name","required","placeholder","disabled","type","passwordConfirmation","isFullWidth","to","Login","history","useHistory","push","QuantityEdit","count","onChange","align","justify","variant","m","aria-label","icon","ChevronLeft","isRound","size","onClick","fontSize","ChevronRight","ItemCard","item","deleteItem","currentListId","bg","itemIsChecked","rounded","boxShadow","color","maxW","itemType","returnIcon","defaultChecked","isChecked","e","newState","target","checked","itemName","quantityRequired","newQuantity","updateQuantity","Close","CreateNewItem","addItemToList","focusBorderColor","leftIcon","Add","SelectList","lists","updateSelection","map","list","index","CreateNewList","createNewList","listNameRef","useRef","spacing","current","ListDashboard","listItems","setListItems","currentList","setCurrentList","userLists","setUserLists","removeItemFromList","remove","Error","newName","items","createdBy","users","key","on","snapshot","val","getActiveListItems","newLists","getUserLists","off","minWidth","maxWidth","marginX","selectedList","height","newItem","justifyContent","Profile","inEditMode","setInEditMode","handleLogout","isIndeterminate","width","alignContent","PrivateRoute","Component","component","rest","render","props","Nav","displayName","App","theme","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c0100cc.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\n\nconst app = firebase.initializeApp( {\napiKey: process.env.REACT_APP_APIKEY,\nauthDomain: process.env.REACT_APP_AUTHDOMAIN,\ndatabaseURL: process.env.REACT_APP_DB,\nprojectId: process.env.REACT_APP_PID,\nstorageBucket: process.env.REACT_APP_SB,\nmessagingSenderId: process.env.REACT_APP_SID,\nappId: process.env.REACT_APP_APPID,\nmeasurementId:process.env.REACT_APP_MID\n});\n\nexport const auth = app.auth();\nexport const databaseRef = firebase.database().ref();\nexport const db = firebase.database();\nexport const itemsRef = databaseRef.child(\"items\")\nexport const usersRef = databaseRef.child(\"users\");\nexport const listsRef = databaseRef.child(\"lists\");","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth, db } from \"../services/firebase\";\n\nexport interface IFBUser {\n  loggedInUser: firebase.default.User;\n  signUpFn: (email: string, password: string) => Promise<unknown>;\n  loginFn: (email: string, password: string) => Promise<firebase.default.auth.UserCredential>;\n  logoutFn: () => void;\n}\n\nconst AuthContext = React.createContext<IFBUser | null>(null);\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }: any) {\n  const [currentUser, setCurrentUser] = useState<firebase.default.User | null>(null);\n\n  function signUp(email: string, password: string) {\n    return auth.createUserWithEmailAndPassword(email, password).then((cred) => {\n      // return usersRef.(\"users\").doc(cred.user?.uid).set({ test: cred.user?.uid });\n      return db.ref(`users/` + cred.user?.uid).set({ id: cred.user?.uid });\n    });\n  }\n\n  function login(email: string, password: string) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser(user);\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  const value: IFBUser = {\n    loggedInUser: currentUser!,\n    signUpFn: (email, password) => signUp(email, password),\n    loginFn: (email, password) => login(email, password),\n    logoutFn: () => logout(),\n  };\n\n  return <AuthContext.Provider value={value}> {children}</AuthContext.Provider>;\n}\n","import {\n  Button,\n  Center,\n  Input,\n  Container,\n  FormLabel,\n  FormControl,\n  FormHelperText,\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  CloseButton,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { FC, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\ntype Inputs = {\n  email: string;\n  password: string;\n  passwordConfirmation: string;\n};\n\nconst SignUp: FC = () => {\n  const { register, handleSubmit, errors } = useForm<Inputs>();\n  const [errorText, setErrorText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const fbAuth = useAuth();\n  const onSubmit = async (data: Inputs) => {\n    try {\n      setIsLoading(true);\n      await fbAuth?.signUpFn(data.email, data.password);\n      console.log(fbAuth?.loggedInUser);\n    } catch {\n      setErrorText(\"Could not create user\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Container p=\"3\">\n      <VStack>\n        {errorText && (\n          <Alert status=\"error\">\n            <AlertIcon />\n            <AlertTitle mr={2}>Oh no!</AlertTitle>\n            <AlertDescription>{errorText}</AlertDescription>\n            <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\n          </Alert>\n        )}\n      </VStack>\n      <Center>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl id=\"email-address\" isRequired>\n            <FormLabel>Email address</FormLabel>\n            <Input\n              colorScheme=\"pink\"\n              name=\"email\"\n              ref={register({ required: true })}\n              placeholder=\"Email...\"\n              disabled={isLoading}\n            />\n            <FormHelperText>{errors.email && <span>Email is required.</span>}</FormHelperText>\n          </FormControl>\n          <FormControl id=\"password\" isRequired>\n            <FormLabel>Password</FormLabel>\n            <Input\n              colorScheme=\"pink\"\n              name=\"password\"\n              ref={register({ required: true })}\n              type=\"password\"\n              disabled={isLoading}\n            />\n            <FormHelperText>{errors.password && <span>Password is required.</span>}</FormHelperText>\n          </FormControl>\n          <FormControl id=\"password-confirmation\" isRequired>\n            <FormLabel>Password Confirmation</FormLabel>\n            <Input\n              colorScheme=\"pink\"\n              name=\"passwordConfirmation\"\n              ref={register({ required: true })}\n              type=\"password\"\n              disabled={isLoading}\n            />\n            <FormHelperText>\n              {errors.passwordConfirmation && <span>Password confirmation is required.</span>}\n            </FormHelperText>\n          </FormControl>\n          <Button colorScheme=\"pink\" isFullWidth type=\"submit\" disabled={isLoading}>\n            Sign-up\n          </Button>\n          <Link to=\"/login\">\n            <Button colorScheme=\"gray\" isFullWidth>\n              Go to Login\n            </Button>\n          </Link>\n        </form>\n      </Center>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import {\n  Button,\n  Center,\n  Input,\n  Container,\n  FormLabel,\n  FormControl,\n  FormHelperText,\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  CloseButton,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { FC, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\ntype Inputs = {\n  email: string;\n  password: string;\n};\n\nconst Login: FC = () => {\n  const { register, handleSubmit, errors } = useForm<Inputs>();\n  const [errorText, setErrorText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const fbAuth = useAuth();\n  const onSubmit = async (data: Inputs) => {\n    try {\n      setErrorText(\"\");\n      setIsLoading(true);\n      await fbAuth?.loginFn(data.email, data.password);\n      history.push(\"/\");\n    } catch {\n      setErrorText(\"Could not login user\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Container p=\"3\">\n      <VStack>\n        {errorText && (\n          <Alert status=\"error\">\n            <AlertIcon />\n            <AlertTitle mr={2}>Oh no!</AlertTitle>\n            <AlertDescription>{errorText}</AlertDescription>\n            <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\n          </Alert>\n        )}\n        {fbAuth?.loggedInUser && <div>{fbAuth.loggedInUser.email}</div>}\n      </VStack>\n      <Center>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl id=\"email-address\" isRequired>\n            <FormLabel>Email address</FormLabel>\n            <Input\n              colorScheme=\"pink\"\n              name=\"email\"\n              ref={register({ required: true })}\n              placeholder=\"Email...\"\n              disabled={isLoading}\n            />\n            <FormHelperText>{errors.email && <span>Email is required.</span>}</FormHelperText>\n          </FormControl>\n          <FormControl id=\"password\" isRequired>\n            <FormLabel>Password</FormLabel>\n            <Input\n              colorScheme=\"pink\"\n              name=\"password\"\n              ref={register({ required: true })}\n              type=\"password\"\n              disabled={isLoading}\n            />\n            <FormHelperText>{errors.password && <span>Password is required.</span>}</FormHelperText>\n          </FormControl>\n\n          <Button colorScheme=\"pink\" isFullWidth type=\"submit\" disabled={isLoading}>\n            Login\n          </Button>\n          <Link to=\"/signup\">\n            <Button colorScheme=\"pink\" isFullWidth>\n              Sign up\n            </Button>\n          </Link>\n        </form>\n      </Center>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React, { FC } from \"react\";\nimport { Box, IconButton, Flex, Heading } from \"@chakra-ui/react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\n\nconst QuantityEdit: FC<{ count: number; onChange: (newQuantity: number) => void }> = ({ count, onChange }) => {\n  return (\n    <Box p={1}>\n      <Flex align=\"center\" justify=\"center\">\n        <IconButton\n          variant=\"outline\"\n          m=\"1\"\n          aria-label=\"Reduce quantity\"\n          icon={<ChevronLeftIcon />}\n          isRound\n          size=\"sm\"\n          onClick={() => onChange(count - 1)}\n        />\n        <Heading m=\"1\" fontSize=\"md\">\n          {count}\n        </Heading>\n        <IconButton\n          variant=\"outline\"\n          m=\"1\"\n          aria-label=\"Increase quantity\"\n          icon={<ChevronRightIcon />}\n          isRound\n          size=\"sm\"\n          onClick={() => onChange(count + 1)}\n        />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default QuantityEdit;\n","import React, { FC } from \"react\";\nimport { Box, IconButton, Checkbox, Heading, Flex } from \"@chakra-ui/react\";\nimport { FaAppleAlt, FaBible, FaBoxOpen, FaSnowflake } from \"react-icons/fa\";\nimport QuantityEdit from \"./QuantityEdit\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { IItemCard, itemType } from \"../types/listItem\";\nimport { databaseRef } from \"../../services/firebase\";\n\nconst ItemCard: FC<IItemCard> = ({ item, deleteItem, currentListId }) => {\n  const returnIcon = (itemType: itemType): JSX.Element => {\n    switch (itemType) {\n      case \"Fresh\":\n        return <FaAppleAlt />;\n      case \"Frozen\":\n        return <FaSnowflake />;\n      case \"Cupboard\":\n        return <FaBoxOpen />;\n      case \"Other\":\n        return <FaBible />;\n      default:\n        return <FaAppleAlt />;\n    }\n  };\n\n  const updateQuantity = (newQuantity: number) => {\n    databaseRef.child(`lists/${currentListId}/items/${item.id}`).set({ ...item, quantityRequired: newQuantity });\n  };\n\n  const updateItemIsChecked = (newState: boolean) => {\n    databaseRef.child(`lists/${currentListId}/items/${item.id}`).set({ ...item, itemIsChecked: newState });\n  };\n\n  return (\n    <Flex\n      bg={item.itemIsChecked ? \"green.100\" : \"white\"}\n      p={4}\n      rounded=\"md\"\n      boxShadow=\"xl\"\n      color=\"black\"\n      maxW=\"400px\"\n      justify=\"center\"\n      align=\"center\"\n    >\n      <Box p=\"2\">\n        <IconButton size=\"lg\" aria-label=\"Item type icon\" icon={returnIcon(item.itemType)} isRound />\n      </Box>\n      <Box p=\"2\">\n        <Checkbox\n          defaultChecked={item.itemIsChecked}\n          isChecked={item.itemIsChecked}\n          colorScheme=\"gray\"\n          onChange={(e) => updateItemIsChecked(e.target.checked)}\n        >\n          <Heading size=\"md\">{item.itemName}</Heading>\n        </Checkbox>\n      </Box>\n      <Box p=\"2\">\n        <QuantityEdit count={item.quantityRequired} onChange={(newQuantity) => updateQuantity(newQuantity)} />\n      </Box>\n      <Box p=\"2\">\n        <IconButton\n          size=\"sm\"\n          color=\"red.500\"\n          bg=\"red.100\"\n          aria-label=\"Delete item\"\n          icon={<CloseIcon />}\n          isRound\n          onClick={() => deleteItem()}\n        />\n      </Box>\n    </Flex>\n  );\n};\n\nexport default ItemCard;\n","import React, { FC } from \"react\";\nimport { Box, Input, Flex, Button, Select } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport listItem, { itemType } from \"../types/listItem\";\n\ntype Inputs = {\n  itemName: string;\n  itemType: itemType;\n};\n\nconst CreateNewItem: FC<{ addItemToList: (data: listItem) => void }> = ({ addItemToList }) => {\n  const { register, handleSubmit, errors } = useForm<Inputs>();\n  const onSubmit = (data: listItem) => {\n    data.itemIsChecked = false;\n    data.quantityRequired = 1;\n    addItemToList(data);\n  };\n\n  return (\n    <Box m=\"0\" p={4}>\n      <Flex align=\"center\" justify=\"center\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box p=\"2\">\n            <Select\n              bg=\"pink\"\n              color=\"black\"\n              focusBorderColor=\"pink\"\n              name=\"itemType\"\n              ref={register({ required: true })}\n              placeholder=\"Select type\"\n            >\n              <option value=\"Fresh\">Fresh</option>\n              <option value=\"Frozen\">Frozen</option>\n              <option value=\"Cupboard\">Cupboard</option>\n              <option value=\"Other\">Other</option>\n            </Select>\n            {errors.itemType && <span>This field is required</span>}\n          </Box>\n\n          <Box p=\"2\">\n            <Input\n              variant=\"filled\"\n              bg=\"white\"\n              color=\"black\"\n              name=\"itemName\"\n              placeholder=\"Enter new item here...\"\n              ref={register({ required: true })}\n            />\n            {errors.itemName && <span>This field is required</span>}\n          </Box>\n          <Box p=\"2\">\n            <Button type=\"submit\" leftIcon={<AddIcon />} colorScheme=\"pink\" variant=\"solid\">\n              Add item\n            </Button>\n          </Box>\n        </form>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default CreateNewItem;\n","import React, { FC } from \"react\";\nimport { Box, Select } from \"@chakra-ui/react\";\nimport IList from \"../types/list\";\nconst SelectList: FC<{ lists: Partial<IList>[]; updateSelection: (target: string) => void }> = ({\n  lists,\n  updateSelection,\n}) => {\n  return (\n    <Box p={1}>\n      <Select placeholder=\"Select an available list\" onChange={(e) => updateSelection(e.target.value)}>\n        {lists.map((list, index) => {\n          return (\n            <option key={`${list.id}.${index}`} value={list.id}>\n              {list.name}\n            </option>\n          );\n        })}\n      </Select>\n    </Box>\n  );\n};\n\nexport default SelectList;\n","import React, { FC, useRef } from \"react\";\nimport { Box, Button, FormControl, FormLabel, Input, VStack } from \"@chakra-ui/react\";\n\nconst CreateNewList: FC<{ createNewList: (newName: string) => void }> = ({ createNewList }) => {\n  const listNameRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <Box p={1}>\n      <VStack spacing=\"4\">\n        <FormControl id=\"listName\">\n          <FormLabel>List name</FormLabel>\n          <Input name=\"listName\" ref={listNameRef} placeholder=\"enter a name...\" isRequired />\n        </FormControl>\n\n        <Button\n          variant=\"outline\"\n          colorScheme=\"teal\"\n          onClick={() => createNewList(listNameRef.current?.value ?? \"Unset List Name\")}\n        >\n          Create new list\n        </Button>\n      </VStack>\n    </Box>\n  );\n};\n\nexport default CreateNewList;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { VStack, Box } from \"@chakra-ui/react\";\nimport ItemCard from \"../ui/ItemCard\";\nimport CreateNewItem from \"../ui/CreateNewItem\";\nimport listItem from \"../types/listItem\";\nimport { databaseRef, listsRef } from \"../../services/firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport IList from \"../types/list\";\nimport SelectList from \"../ui/SelectList\";\nimport CreateNewList from \"../ui/CreateNewList\";\n\nconst ListDashboard: FC = () => {\n  const [listItems, setListItems] = useState<listItem[]>([]);\n  const [currentList, setCurrentList] = useState(\"\");\n  const [userLists, setUserLists] = useState<Partial<IList>[]>([]);\n  const fbAuth = useAuth();\n\n  const removeItemFromList = async (id: string) => {\n    try {\n      await databaseRef.child(`lists/${currentList}/items/${id}`).remove();\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  const createNewList = async (newName: string) => {\n    try {\n      const list = listsRef.push({\n        name: newName,\n        items: [],\n        createdBy: fbAuth?.loggedInUser.uid,\n        users: [fbAuth?.loggedInUser.uid],\n      });\n      setCurrentList(list.key ?? \"unset\");\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  useEffect(() => {\n    const getActiveListItems = () => {\n      try {\n        databaseRef.child(`lists/${currentList}/items`).on(\"value\", (snapshot) => {\n          let items: listItem[] = snapshot.val();\n          let newState: listItem[] = [];\n          for (let item in items) {\n            newState.push({\n              id: item,\n              itemName: items[item].itemName,\n              itemType: items[item].itemType,\n              itemIsChecked: items[item].itemIsChecked,\n              quantityRequired: items[item].quantityRequired,\n            });\n          }\n          setListItems(newState);\n        });\n      } catch (e) {\n        throw new Error(e);\n      }\n    };\n\n    const getUserLists = () => {\n      try {\n        listsRef.on(\"value\", (snapshot) => {\n          let lists: IList[] = snapshot.val();\n          let newLists: Partial<IList>[] = [];\n          for (let list in lists) {\n            if (lists[list].createdBy === fbAuth?.loggedInUser.uid) {\n              newLists.push({\n                id: list,\n                name: lists[list].name,\n              });\n            }\n          }\n          setUserLists(newLists);\n        });\n      } catch (e) {\n        throw new Error(e);\n      }\n    };\n\n    getActiveListItems();\n    getUserLists();\n\n    return () => {\n      listsRef.off();\n      databaseRef.child(`lists/${currentList}/items`).off();\n    };\n  }, [currentList, fbAuth?.loggedInUser.uid]);\n\n  return (\n    <Box p=\"2\" minWidth=\"50%\" maxWidth=\"75%\" marginX=\"auto\">\n      <CreateNewList createNewList={(newName) => createNewList(newName)} />\n      <SelectList lists={userLists} updateSelection={(selectedList) => setCurrentList(selectedList)} />\n\n      <Box bg=\"gray.50\" height=\"75vh\" m=\"1\">\n        <CreateNewItem\n          addItemToList={(newItem) => {\n            setListItems([...listItems, newItem]);\n            databaseRef.child(`lists/${currentList}/items`).push(newItem);\n          }}\n        />\n\n        <VStack justifyContent=\"center\">\n          {listItems.map((item, index) => {\n            return (\n              <ItemCard\n                key={`${index}.${item.itemName}`}\n                item={item}\n                deleteItem={() => removeItemFromList(item.id)}\n                currentListId={currentList}\n              />\n            );\n          })}\n        </VStack>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ListDashboard;\n","import React, { FC, useState } from \"react\";\nimport {\n  Center,\n  VStack,\n  Container,\n  Heading,\n  Button,\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  CloseButton,\n  CircularProgress,\n} from \"@chakra-ui/react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile: FC = () => {\n  const [errorText, setErrorText] = useState(\"\");\n  const [inEditMode, setInEditMode] = useState(false);\n  const fbAuth = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const handleLogout = async () => {\n    try {\n      setErrorText(\"\");\n      setIsLoading(true);\n      await fbAuth?.logoutFn();\n      history.push(\"/login\");\n    } catch {\n      setErrorText(\"Could not logout user\");\n    }\n    setIsLoading(false);\n  };\n\n  if (isLoading) {\n    return <CircularProgress isIndeterminate />;\n  }\n\n  if (inEditMode) {\n    return (\n      <Container width=\"1200px\" alignContent=\"center\" justifyContent=\"center\">\n        <Center bg=\"gray.300\" color=\"white\" rounded=\"lg\">\n          <VStack width=\"100%\" spacing={4}>\n            {errorText && (\n              <Alert status=\"error\">\n                <AlertIcon />\n                <AlertTitle mr={2}>Oh no!</AlertTitle>\n                <AlertDescription>{errorText}</AlertDescription>\n                <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\n              </Alert>\n            )}\n            <Heading>Profile</Heading>\n            <Heading> {fbAuth?.loggedInUser && fbAuth.loggedInUser.email}</Heading>\n            <Button onClick={() => setInEditMode(false)}>Cancel</Button>\n            <Button onClick={() => console.log(\"save\")}>Save</Button>\n          </VStack>\n        </Center>\n      </Container>\n    );\n  }\n\n  return (\n    <Container width=\"1200px\" alignContent=\"center\" justifyContent=\"center\">\n      <Center bg=\"gray.300\" color=\"white\" rounded=\"lg\">\n        <VStack width=\"100%\" spacing={4}>\n          <Heading>Profile</Heading>\n          <Heading> {fbAuth?.loggedInUser && fbAuth.loggedInUser.email}</Heading>\n          <Button onClick={() => handleLogout()}>Log out</Button>\n          <Button onClick={() => setInEditMode(true)}>Edit profile</Button>\n        </VStack>\n      </Center>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => {\n  const fbAuth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={(props: any) => {\n        return fbAuth?.loggedInUser && fbAuth.loggedInUser.email ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    ></Route>\n  );\n};\n\nexport default PrivateRoute;\n","import { Avatar, Box, Button, Flex, IconButton, Spacer } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { FiShoppingCart } from \"react-icons/fi\";\n\nconst Nav = () => {\n  const fbAuth = useAuth();\n  const history = useHistory();\n\n  const handleLogout = async () => {\n    try {\n      await fbAuth?.logoutFn();\n      history.push(\"/login\");\n    } catch {\n      throw new Error();\n    }\n  };\n\n  return (\n    <Flex align=\"center\" p=\"2\" m=\"2\" justify=\"center\" bg=\"teal.400\">\n      <Box p=\"2\">\n        <Link to=\"/\">\n          <IconButton bg=\"gray.200\" color=\"pink.400\" size=\"lg\" aria-label=\"Item type icon\" icon={<FiShoppingCart />} />\n        </Link>\n      </Box>\n      <Spacer />\n      <Flex align=\"center\" justify=\"flex-end\">\n        {!fbAuth?.loggedInUser ? (\n          <>\n            <Link to=\"/login\">\n              <Button m=\"2\" variant=\"solid\" colorScheme=\"pink\">\n                Login\n              </Button>\n            </Link>\n            <Link to=\"/signup\">\n              <Button m=\"2\" variant=\"solid\" colorScheme=\"pink\">\n                Sign up\n              </Button>\n            </Link>\n          </>\n        ) : (\n          <Button m=\"2\" variant=\"solid\" colorScheme=\"pink\" onClick={() => handleLogout()}>\n            Logout\n          </Button>\n        )}\n        <Avatar m=\"2\" name={(fbAuth?.loggedInUser && fbAuth.loggedInUser.displayName) ?? \"Not suppled\"} bg=\"gray.200\" />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { ChakraProvider, theme } from \"@chakra-ui/react\";\nimport SignUp from \"./components/pages/SignUp\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/pages/Login\";\nimport ListDashboard from \"./components/pages/ListDashboard\";\nimport Profile from \"./components/pages/Profile\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Nav from \"./components/sections/Nav\";\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    <Router>\n      <AuthProvider>\n        <Nav />\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={ListDashboard} />\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n        </Switch>\n      </AuthProvider>\n    </Router>\n  </ChakraProvider>\n);\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}